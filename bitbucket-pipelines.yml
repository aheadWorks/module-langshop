definitions:
  scripts:
    clean_source: &cleanSource |-
      rm -rf .hgignore bitbucket-pipelines.yml .hg .git .gitignore
    clean_test_results: &cleanTestResults |-
      rm -rf test-results
    pack_zip: &packZip |-
      echo "Will create ${BITBUCKET_REPO_SLUG}.zip"
      zip -r ${BITBUCKET_REPO_SLUG}.zip .
    prepare_ssh: &prepareSSH |-
      # change way to get access of our modules to composer from ssh keys to composer keys
      mkdir -p ~/.ssh
      (umask  077; echo ${AWM2EXT_SSH_KEY} | base64 -di > ~/.ssh/id_rsa)
      chmod 700 ~/.ssh
      echo ${AW_COMPOSER_KNOWN_HOSTS} >> ~/.ssh/known_hosts
      ssh-keyscan -t rsa bitbucket.org >> ~/.ssh/known_hosts

  build_steps:
    - step: &build
        image: atlassian/default-image:2
        name: Clean and pack sources
        script:
          - *cleanSource
          - *packZip
        artifacts:
          - "*.zip"
  test_steps:
# Magento 2.4.8 tests
    - step: &codesnifferTestPHP84-2.4.8
        name: codesniffer tests PHP 8.4 on Magento 2.4.8
        image: aheadworks/m2test-new:2.4.8-without-db-8.4
        script:
          - pip3 install --break-system-packages aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager codesniffer ${PWD} test-results/codesniffer-2.4.8.xml
        artifacts:
          - "test-results/**"

    - step: &unitTestPHP84-2.4.8
        name: unit tests PHP 8.4 on Magento 2.4.8
        image: aheadworks/m2test-new:2.4.8-with-db-8.4
        script:
          - *prepareSSH
          - pip3 install --break-system-packages aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager unit ${PWD} test-results/test-unit-2.4.8.xml
        artifacts:
          - "test-results/**"

    - step: &phpstanTestPHP84-2.4.8
        name: phpstan tests PHP 8.4 on Magento 2.4.8
        image: aheadworks/m2test-new:2.4.8-with-db-8.4
        script:
          - *prepareSSH
          - pip3 install --break-system-packages aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager phpstan ${PWD} test-results/test-phpstan-2.4.8.xml
        artifacts:
          - "test-results/**"

    - step: &installMagentoPHP84-2.4.8
        name: install Magento 2.4.8 test
        image: aheadworks/m2test-new:2.4.8-without-db-8.4
        script:
          - *prepareSSH
          - pip3 install --break-system-packages aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager install-magento ${PWD} test-results/install-test-2.4.8.xml
        artifacts:
          - "logs1/**"
          - "test-results/**"

# Magento 2.4.7 tests
    - step: &codesnifferTestPHP83-2.4.7
        name: codesniffer tests on Magento 2.4.7
        image: aheadworks/m2test-new:2.4.7-p5-without-db-8.3
        script:
          - pip3 install --break-system-packages  aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager codesniffer ${PWD} test-results/codesniffer-2.4.7.xml
        artifacts:
          - "test-results/**"

    - step: &unitTestPHP83-2.4.7
        name: unit tests PHP 8.3 on Magento 2.4.7
        image: aheadworks/m2test-new:2.4.7-p5-with-db-8.3
        script:
          - *prepareSSH
          - pip3 install --break-system-packages aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager unit ${PWD} test-results/test-unit-2.4.7.xml
        artifacts:
          - "test-results/**"

    - step: &phpstanTestPHP83-2.4.7
        name: phpstan tests PHP 8.3 on Magento 2.4.7
        image: aheadworks/m2test-new:2.4.7-p5-with-db-8.3
        script:
          - *prepareSSH
          - pip3 install --break-system-packages aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager phpstan ${PWD} test-results/test-phpstan-2.4.7.xml
        artifacts:
          - "test-results/**"

    - step: &installMagentoPHP83-2.4.7
        name: install Magento 2.4.7 test
        image: aheadworks/m2test-new:2.4.7-p5-without-db-8.3
        script:
          - *prepareSSH
          - pip3 install --break-system-packages aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager install-magento ${PWD} test-results/install-test-2.4.7.xml
        artifacts:
          - "logs1/**"
          - "test-results/**"

# Magento 2.4.6 tests
    - step: &messDetectorTestPHP82-2.4.6
        name: mess detector tests PHP 8.2
        image: aheadworks/m2test-new:2.4.6-p10-with-db-8.2
        script:
          - *prepareSSH
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager mess-detector ${PWD}
        artifacts:
          - "test-results/**"

    - step: &codesnifferTestPHP82-2.4.6
        name: codesniffer tests on Magento 2.4.6
        image: aheadworks/m2test-new:2.4.6-p10-without-db-8.2
        script:
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager codesniffer ${PWD} test-results/codesniffer-2.4.6.xml
        artifacts:
          - "test-results/**"

    - step: &unitTestPHP82-2.4.6
        name: unit tests PHP 8.2 on Magento 2.4.6
        image: aheadworks/m2test-new:2.4.6-p10-with-db-8.2
        script:
          - *prepareSSH
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager unit ${PWD} test-results/test-unit-2.4.6.xml
        artifacts:
          - "test-results/**"

    - step: &phpstanTestPHP82-2.4.6
        name: phpstan tests PHP 8.2 on Magento 2.4.6
        image: aheadworks/m2test-new:2.4.6-p10-with-db-8.2
        script:
          - *prepareSSH
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager phpstan ${PWD} test-results/test-phpstan-2.4.6.xml
        artifacts:
          - "test-results/**"

    - step: &installMagentoPHP82-2.4.6
        name: install Magento 2.4.6 test
        image: aheadworks/m2test-new:2.4.6-p10-without-db-8.2
        script:
          - *prepareSSH
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager install-magento ${PWD} test-results/test-unit.xml
        artifacts:
          - "logs1/**"
          - "test-results/test-unit.xml"

# Magento 2.4.5 tests
    - step: &unitTestPHP81-2.4.5
        name: unit tests PHP 8.1 on Magento 2.4.5
        image: aheadworks/m2test-new:2.4.5-p12-with-db-8.1
        script:
          - *prepareSSH
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager unit ${PWD} test-results/test-unit-2.4.5.xml
        artifacts:
          - "test-results/**"

    - step: &phpstanTestPHP81-2.4.5
        name: phpstan tests PHP 8.1 on Magento 2.4.5
        image: aheadworks/m2test-new:2.4.5-p12-with-db-8.1
        script:
          - *prepareSSH
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager phpstan ${PWD} test-results/test-phpstan-2.4.5.xml
        artifacts:
          - "test-results/**"

    - step: &installMagentoPHP81-2.4.5
        name: install Magento 2.4.5 test
        image: aheadworks/m2test-new:2.4.5-p12-without-db-8.1
        script:
          - *prepareSSH
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager install-magento ${PWD} test-results/test-unit.xml
        artifacts:
          - "logs1/**"
          - "test-results/test-unit.xml"

  deployment_steps:
    - step: &rebuildPrivateComposer
        name: Sync tags and branches to the Internal composer
        image: aheadworks/deploy-tools:new-gen
        script:
          - *cleanTestResults
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_bitbucket_manager internal_composer_refresh
    - step: &releaseToPublicComposer
        name: Add the new package to the Public composer repository
        image: aheadworks/deploy
        username: ${DOCKERHUB_LOGIN}
        password: ${DOCKERHUB_PASSWORD}
        script:
          - *cleanTestResults
          - *prepareSSH
          - VERSION=$(cat composer.json | jq -r '.version') && NAME=$(cat composer.json | jq -r '.name')
          - test -f ${BITBUCKET_REPO_SLUG}.zip
          - echo "Ready to push ${NAME}-${VERSION} to ${AW_COMPOSER_API_URL}"
          - ssh -t ${AW_COMPOSER_SSH_URL} "mkdir -p ${AW_COMPOSER_PACKAGES_ROOT}/${NAME}"
          - scp ${BITBUCKET_REPO_SLUG}.zip ${AW_COMPOSER_SSH_URL}:${AW_COMPOSER_PACKAGES_ROOT}/${NAME}/${BITBUCKET_REPO_SLUG}-${VERSION}.zip
          - REPO_URL=${AW_COMPOSER_API_URL} REPO_LOGIN=${AW_COMPOSER_API_LOGIN} REPO_TOKEN=${AW_COMPOSER_API_PASSWORD} deploy comp -p send-package --filename=${BITBUCKET_REPO_SLUG}-${VERSION}.zip ${BITBUCKET_REPO_SLUG}.zip
    - step: &build_packages
        name: Build store and marketplace packages and send them to Teamwork
        image: aheadworks/deploy-tools:new-gen
        script:
            - *prepareSSH
            - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
            - python3 -m aheadworks_release_manager build-ecommerce-pack --bitbucket_workspace=${BITBUCKET_WORKSPACE} --bitbucket_repo_slug=${BITBUCKET_REPO_SLUG}
            - python3 -m aheadworks_release_manager build-mm-pack
            - if [[ "$BITBUCKET_REPO_SLUG" == "module-test" ]]; then DISCORD_BOT_URL=${TEST_DISCORD_MAGENTO_RELEASE_BOT_URL}; else DISCORD_BOT_URL=${DISCORD_MAGENTO_RELEASE_BOT_URL}; fi;
            - python3 -m aheadworks_release_manager teamwork-release --jira_project_key="${JIRA_PROJECT_KEY}" --composer-file="./composer.json" --discord-bot-url="${DISCORD_BOT_URL}" --path_to_files="/build_archives" --assign_to="${AFTER_RELEASE_ASSIGNEE_TEAMWORK}"
        artifacts:
            - "/build_archives/**"
    - step: &swaggerWebApiDocBuild
        name: Build Web Api Documentation and publish it at S3
        image: aheadworks/deploy-tools:swagger
        script:
          - *prepareSSH
          - git -C /tmp clone https://x-token-auth:$SWAGGER_ACCESS_TOKEN@bitbucket.org/awimpl/magento-swagger-web-api-generator.git
          - cp -r /tmp/magento-swagger-web-api-generator/* /var/www/html/pub
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_release_manager build-swagger-web-api-doc --path-to-module=./ --magento_url=http://localhost
    - step: &get_key
        name: get_key
        image: aheadworks/m2test-new:test-7.4
        script:
          - echo ${DEVOPS_SSH_KEY} > key
          - printenv > env
        artifacts:
          - key
          - env
pipelines:
  tags:
    '*.*.*':
      - step: *rebuildPrivateComposer
  branches:
    # For commits to master branch: run full set of tests
    master:
      - step: *build
      - parallel:
          - step: *codesnifferTestPHP82-2.4.6
          - step: *unitTestPHP82-2.4.6
          - step: *installMagentoPHP82-2.4.6
          - step: *phpstanTestPHP82-2.4.6
          - step: *unitTestPHP81-2.4.5
          - step: *phpstanTestPHP81-2.4.5
          - step: *installMagentoPHP81-2.4.5
      - step: *rebuildPrivateComposer
      - step: *build_packages
      - step: *swaggerWebApiDocBuild
      - step: *releaseToPublicComposer

    # For every commit to develop branch: run tests
    develop:
      - parallel:
          - step: *codesnifferTestPHP84-2.4.8
          - step: *unitTestPHP84-2.4.8
          - step: *phpstanTestPHP84-2.4.8
          - step: *installMagentoPHP84-2.4.8
          - step: *codesnifferTestPHP83-2.4.7
          - step: *unitTestPHP83-2.4.7
          - step: *phpstanTestPHP83-2.4.7
          - step: *installMagentoPHP83-2.4.7
          - step: *codesnifferTestPHP82-2.4.6
          - step: *unitTestPHP82-2.4.6
          - step: *installMagentoPHP82-2.4.6
          - step: *phpstanTestPHP82-2.4.6
          - step: *unitTestPHP81-2.4.5
          - step: *phpstanTestPHP81-2.4.5
          - step: *installMagentoPHP81-2.4.5
          
      - step: *rebuildPrivateComposer
    feature/*:
      - parallel:
        - step: *codesnifferTestPHP82-2.4.6
        - step: *unitTestPHP82-2.4.6
        - step: *phpstanTestPHP82-2.4.6
        - step: *phpstanTestPHP81-2.4.5

    bugfix/*:
      - parallel:
        - step: *unitTestPHP83-2.4.7
        - step: *codesnifferTestPHP82-2.4.6
        - step: *unitTestPHP82-2.4.6
        - step: *phpstanTestPHP82-2.4.6
        - step: *phpstanTestPHP81-2.4.5

    release/*:
      - step: *build
      - parallel:
          - step: *unitTestPHP83-2.4.7
          - step: *codesnifferTestPHP82-2.4.6
          - step: *unitTestPHP82-2.4.6
          - step: *phpstanTestPHP82-2.4.6
          - step: *unitTestPHP81-2.4.5
          - step: *phpstanTestPHP81-2.4.5

  custom:
    # Manual upload to the Public composer repository
    release-to-public-composer:
      - step: *build
      - step: *releaseToPublicComposer

    # Manual resync of tags and branches for Internal composer repo
    rebuild-private-composer:
      - step: *rebuildPrivateComposer

    # Build pack manually
    build-marketplace-package:
      - step: *build

    # Run tests manually
    run-all-tests:
      - parallel:
          - step: *codesnifferTestPHP82-2.4.6
          - step: *unitTestPHP82-2.4.6
          - step: *phpstanTestPHP82-2.4.6
          - step: *messDetectorTestPHP82-2.4.6
          - step: *installMagentoPHP82-2.4.6
          - step: *phpstanTestPHP81-2.4.5
          - step: *unitTestPHP81-2.4.5
          - step: *installMagentoPHP81-2.4.5

    # Run prerelease tests manually
    run-prerelease-tests:
      - parallel:
          - step: *codesnifferTestPHP82-2.4.6
          - step: *unitTestPHP82-2.4.6
          - step: *installMagentoPHP82-2.4.6
          - step: *unitTestPHP81-2.4.5
          - step: *installMagentoPHP81-2.4.5

    get_key:
      - step: *get_key

    #prepare build
    build_packages:
      - step: *build_packages

    # Manually rebuild Web Api Documentation and publish it at S3
    swagger-web-api-doc-build:
      - step: *swaggerWebApiDocBuild

    # copy this file to all modules

    codesniffer-test-with-select-severity:
      - variables:
          - name: SEVERITY
            default: 9
      - step: *codesnifferTestPHP82-2.4.6

    phpstan-test-with-select-severity:
      - variables:
          - name: PHPSTANSEVERITY
            default: 0
      - parallel:
          - step: *phpstanTestPHP81-2.4.5
          - step: *phpstanTestPHP82-2.4.6

    mess-detector-test:
      - step: *messDetectorTestPHP82-2.4.6
